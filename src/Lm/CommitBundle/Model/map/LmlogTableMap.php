<?php

namespace Lm\CommitBundle\Model\map;

use \RelationMap;
use \TableMap;


/**
 * This class defines the structure of the 'lmlog' table.
 *
 *
 * This class was autogenerated by Propel 1.7.1 on:
 *
 * 07/04/14 13:52:56
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    propel.generator.src.Lm.CommitBundle.Model.map
 */
class LmlogTableMap extends TableMap
{

    /**
     * The (dot-path) name of this class
     */
    const CLASS_NAME = 'src.Lm.CommitBundle.Model.map.LmlogTableMap';

    /**
     * Initialize the table attributes, columns and validators
     * Relations are not initialized by this method since they are lazy loaded
     *
     * @return void
     * @throws PropelException
     */
    public function initialize()
    {
        // attributes
        $this->setName('lmlog');
        $this->setPhpName('Lmlog');
        $this->setClassname('Lm\\CommitBundle\\Model\\Lmlog');
        $this->setPackage('src.Lm.CommitBundle.Model');
        $this->setUseIdGenerator(true);
        // columns
        $this->addPrimaryKey('id', 'Id', 'INTEGER', true, null, null);
        $this->addColumn('logtype', 'Logtype', 'ENUM', true, null, null);
        $this->getColumn('logtype', false)->setValueSet(array (
  0 => '1000',
  1 => '1001',
  2 => '1002',
));
        $this->addColumn('logmessage', 'Logmessage', 'VARCHAR', true, 1000, null);
        $this->addColumn('logdate', 'Logdate', 'TIMESTAMP', true, null, null);
        // validators
    } // initialize()

    /**
     * Build the RelationMap objects for this table relationships
     */
    public function buildRelations()
    {
    } // buildRelations()

} // LmlogTableMap
